# Test generated by RoostGPT for test testUnitNjs2 using AI Type Open AI and AI Model gpt-4


# Test generated for /pet_put for http method type PUT in artillery framework

# RoostTestHash=04bbbce6b4


config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 20
  plugins:
    expect: {}
  payload:
    path: "pet_put_success.csv"
    fields:
      - "id"
      - "name"
      - "category"
      - "photoUrls"
      - "tags"
      - "status"
    skipHeader: true
  defaults:
    headers:
      petstore_auth: "{{$processEnvironment.AUTH_TOKEN}}"

scenarios:
  - name: "Pet API test"
    flow:
      - post:
          url: "/v2/pet"
          json:
            id: "{{ id }}"
            name: "{{ name }}"
            category: "{{ category }}"
            photoUrls: "{{ photoUrls }}"
            tags: "{{ tags }}"
            status: "{{ status }}"
          capture:
            json: "$.id"
            as: "petId"
          expect:
            - statusCode: 200
            - hasProperty: "name"
            - hasProperty: "category"
            - hasProperty: "photoUrls"
            - hasProperty: "tags"
            - hasProperty: "status"
          think: 1
      - get:
          url: "/v2/pet/{{ petId }}"
          expect:
            - statusCode: 200
            - hasProperty: "name"
            - hasProperty: "category"
            - hasProperty: "photoUrls"
            - hasProperty: "tags"
            - hasProperty: "status"
          think: 1
      - put:
          url: "/v2/pet"
          json:
            id: "{{ petId }}"
            name: "{{ name }}"
            category: "{{ category }}"
            photoUrls: "{{ photoUrls }}"
            tags: "{{ tags }}"
            status: "{{ status }}"
          expect:
            - statusCode: 200
            - hasProperty: "name"
            - hasProperty: "category"
            - hasProperty: "photoUrls"
            - hasProperty: "tags"
            - hasProperty: "status"
          think: 1
