# ********RoostGPT********

# Test generated by RoostGPT for test testUnitNjs2 using AI Type Open AI and AI Model gpt-4
# 
# Test generated for /pet/{petId}_post for http method type POST in artillery framework
# RoostTestHash=99d9f02040
# 
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 20
  plugins:
    expect: {}
  payload:
    path: "pet_petId_post_others.csv"
    fields: ["petId", "name", "status"]
    skipHeader: true
    delimiter: "^|^"

scenarios:
  - name: "Testing non-success API responses"
    flow:
      - log: "Sending a POST request with an incorrect URL"
      - post:
          url: "/v2/pet/invalid"
          headers:
            api_key: "{{$processEnvironment.AUTH_TOKEN}}"
          expect:
            - statusCode: 404

      - think: 1

      - log: "Sending a POST request without required headers"
      - post:
          url: "/v2/pet/{{ petId }}"
          headers:
            Content-Type: "application/x-www-form-urlencoded"
          expect:
            - statusCode: 401

      - think: 1

      - log: "Sending a POST request with invalid payload"
      - post:
          url: "/v2/pet/{{ petId }}"
          headers:
            api_key: "{{$processEnvironment.AUTH_TOKEN}}"
            Content-Type: "application/x-www-form-urlencoded"
          json:
            name: 12345
            status: "invalid_status"
          expect:
            - statusCode: 400

      - think: 1

      - log: "Sending a POST request with missing payload"
      - post:
          url: "/v2/pet/{{ petId }}"
          headers:
            api_key: "{{$processEnvironment.AUTH_TOKEN}}"
            Content-Type: "application/x-www-form-urlencoded"
          expect:
            - statusCode: 400

      - think: 1

      - log: "Sending a POST request with all correct parameters"
      - post:
          url: "/v2/pet/{{ petId }}"
          headers:
            api_key: "{{$processEnvironment.AUTH_TOKEN}}"
            Content-Type: "application/x-www-form-urlencoded"
          json:
            name: "{{ name }}"
            status: "{{ status }}"
          expect:
            - statusCode: 200
            - hasProperty: "name"
            - hasProperty: "status"
