# ********RoostGPT********

# Test generated by RoostGPT for test testUnitNjs2 using AI Type Open AI and AI Model gpt-4
# 
# Test generated for /pet_post for http method type POST in artillery framework
# RoostTestHash=11a919de45
# 
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  plugins:
    expect: {}
  payload:
    path: "pet_post_others.csv"
    fields:
      - "id"
      - "name"
      - "photoUrls"
      - "tags"
      - "status"
    skipHeader: true
    delimiter: "^|^"
  environments:
    staging:
      target: "{{ $processEnvironment.API_HOST }}"
      variables:
        AUTH_TOKEN: "{{ $processEnvironment.AUTH_TOKEN }}"

scenarios:
  - name: "Non-successful API requests"
    flow:
      - log: "Sending an invalid POST request to /v2/pet"
      - post:
          url: "/v2/pet"
          headers:
            Content-Type: "application/json"
            api_key: "{{ AUTH_TOKEN }}"
          json:
            id: "{{ id }}"
            name: "{{ name }}"
            photoUrls: "{{ photoUrls }}"
            tags: "{{ tags }}"
            status: "{{ status }}"
          expect:
            - statusCode: 400
            - hasProperty: "message"
            - hasProperty: "code"
            - hasProperty: "fields"
      - think: 1

      - log: "Sending a POST request to an invalid URL"
      - post:
          url: "/invalid/url"
          headers:
            Content-Type: "application/json"
            api_key: "{{ AUTH_TOKEN }}"
          json:
            id: "{{ id }}"
            name: "{{ name }}"
            photoUrls: "{{ photoUrls }}"
            tags: "{{ tags }}"
            status: "{{ status }}"
          expect:
            - statusCode: 404
      - think: 1

      - log: "Sending a POST request without authorization token"
      - post:
          url: "/v2/pet"
          headers:
            Content-Type: "application/json"
          json:
            id: "{{ id }}"
            name: "{{ name }}"
            photoUrls: "{{ photoUrls }}"
            tags: "{{ tags }}"
            status: "{{ status }}"
          expect:
            - statusCode: 401
      - think: 1
