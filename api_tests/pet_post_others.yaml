# Test generated by RoostGPT for test testUnitNjs2 using AI Type Open AI and AI Model gpt-4


# Test generated for /pet_post for http method type POST in artillery framework

# RoostTestHash=11a919de45


config:
  target: "{{ $processEnvironment.API_HOST }}"
  processor: "./my-processor.js"
  plugins:
    expect: {}
  payload:
    path: "pet_post_others.csv"
    fields:
      - "id"
      - "name"
      - "photoUrls"
      - "status"
      - "category"
      - "tags"
    skipHeader: true
  environments:
    development:
      target: "http://dev.api.host"
      headers:
        Authorization: "Bearer {{$processEnvironment.AUTH_TOKEN}}"
    production:
      target: "http://prod.api.host"
      headers:
        Authorization: "Bearer {{$processEnvironment.AUTH_TOKEN}}"

scenarios:
  - name: "Testing non-success API responses"
    flow:
      - post:
          url: "/v2/pet"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer {{$processEnvironment.AUTH_TOKEN}}"
          json:
            id: "{{ id }}"
            name: "{{ name }}"
            photoUrls: "{{ photoUrls }}"
            status: "{{ status }}"
            category: "{{ category }}"
            tags: "{{ tags }}"
          expect:
            - statusCode: 400
            - hasProperty: "message"
            - equals: 
                message: "Invalid input"
          capture:
            json: "$.message"
            as: "responseMessage"
        think: 1

      - post:
          url: "/v2/pet"
          headers:
            Content-Type: "application/json"
            Authorization: "InvalidToken"
          json:
            id: "{{ id }}"
            name: "{{ name }}"
            photoUrls: "{{ photoUrls }}"
            status: "{{ status }}"
            category: "{{ category }}"
            tags: "{{ tags }}"
          expect:
            - statusCode: 401
            - hasProperty: "message"
            - equals: 
                message: "Unauthorized access"
          capture:
            json: "$.message"
            as: "responseMessage"
        think: 1

      - post:
          url: "/v2/invalidURL"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer {{$processEnvironment.AUTH_TOKEN}}"
          json:
            id: "{{ id }}"
            name: "{{ name }}"
            photoUrls: "{{ photoUrls }}"
            status: "{{ status }}"
            category: "{{ category }}"
            tags: "{{ tags }}"
          expect:
            - statusCode: 404
            - hasProperty: "message"
            - equals: 
                message: "Not Found"
          capture:
            json: "$.message"
            as: "responseMessage"
        think: 1
