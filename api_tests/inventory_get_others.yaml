# Test generated by RoostGPT for test testUnitNjs2 using AI Type Open AI and AI Model gpt-4


# Test generated for /store/inventory_get for http method type GET in artillery framework

# RoostTestHash=a66f7079af


config:
  target: "{{ $processEnvironment.API_HOST }}"
  plugins:
    expect: {}
  payload:
    path: "inventory_get_others.csv"
    fields:
      - "itemId"
      - "itemName"
    skipHeader: true
  phases:
    - duration: 60
      arrivalRate: 20

scenarios:
  - name: "API failure cases"
    flow:
      - log: "Sending GET request with invalid URL"
        get:
          url: "/v2/store/invalid"
          headers:
            api_key: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 404
        think: 1

      - log: "Sending GET request without authorization"
        get:
          url: "/v2/store/inventory"
          expect:
            - statusCode: 401
        think: 1

      - log: "Sending GET request with invalid authorization"
        get:
          url: "/v2/store/inventory"
          headers:
            api_key: "invalid_token"
          expect:
            - statusCode: 403
        think: 1

      - log: "Sending GET request with valid authorization but invalid item id"
        get:
          url: "/v2/store/inventory?itemId=invalid_id"
          headers:
            api_key: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 400
        think: 1

      - log: "Sending GET request with valid authorization and valid item id but invalid item name"
        get:
          url: "/v2/store/inventory?itemId={{ itemId }}&itemName=invalid_name"
          headers:
            api_key: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 400
        think: 1

      - log: "Sending GET request with valid authorization and valid item id and valid item name but non-existing item"
        get:
          url: "/v2/store/inventory?itemId={{ itemId }}&itemName={{ itemName }}"
          headers:
            api_key: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 404
        think: 1
